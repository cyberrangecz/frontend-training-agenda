{"ast":null,"code":"import { TrainingAgendaContext } from '@muni-kypo-crp/training-agenda/internal';\nimport { ActivatedRoute } from '@angular/router';\nimport { TrainingDefinitionEditOverviewComponent } from '@muni-kypo-crp/training-agenda/definition-edit';\nimport { TestBed, async, fakeAsync } from '@angular/core/testing';\nimport { createActivatedRouteSpy, createTrainingDefinitionEditServiceSpy, createContext } from '../../../internal/src/testing/testing-commons.spec';\nimport { TrainingDefinitionEditService } from '@muni-kypo-crp/training-agenda/definition-edit';\nimport { TrainingDefinition, GameLevel, AssessmentLevel, InfoLevel } from '@muni-kypo-crp/training-model';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { TrainingDefinitionChangeEvent } from '../model/events/training-definition-change-event';\nimport { asyncData } from '@sentinel/common';\nimport { SentinelControlItem } from '@sentinel/components/controls';\nimport { MaterialTestingModule } from '../../../internal/src/testing/material-testing.module';\ndescribe('TrainingDefinitionEditOverviewComponent', () => {\n  let component;\n  let fixture;\n  let activatedRouteSpy;\n  let editServiceSpy;\n  let context;\n  beforeEach(async(() => {\n    activatedRouteSpy = createActivatedRouteSpy();\n    editServiceSpy = createTrainingDefinitionEditServiceSpy();\n    context = createContext();\n    initComponentData();\n    TestBed.configureTestingModule({\n      imports: [MaterialTestingModule, BrowserAnimationsModule],\n      declarations: [TrainingDefinitionEditOverviewComponent],\n      providers: [{\n        provide: ActivatedRoute,\n        useValue: activatedRouteSpy\n      }, {\n        provide: TrainingDefinitionEditService,\n        useValue: editServiceSpy\n      }, {\n        provide: TrainingAgendaContext,\n        useValue: context\n      }]\n    }).compileComponents();\n  }));\n  beforeEach(() => {\n    fixture = TestBed.createComponent(TrainingDefinitionEditOverviewComponent);\n    component = fixture.componentInstance;\n  });\n  it('should create', () => {\n    expect(component).toBeTruthy();\n  });\n  it('should set correct values', () => {\n    expect(component.defaultPaginationSize).toEqual(10);\n    component.trainingDefinition$.subscribe(val => expect(val).toEqual(createMock()));\n    component.tdTitle$.subscribe(val => expect(val).toEqual(createMock().title));\n    component.saveDisabled$.subscribe(val => expect(val).toEqual(false));\n    component.editMode$.subscribe(val => expect(val).toEqual(false));\n  });\n  it('should deactivate', () => {\n    expect(component.canDeactivate()).toBeTrue();\n  });\n  it('should change state of component', () => {\n    component.onTrainingDefinitionChanged(new TrainingDefinitionChangeEvent(createMock(), true));\n    expect(editServiceSpy.change).toHaveBeenCalledTimes(1);\n    expect(component.canDeactivateTDEdit).toBeFalse();\n  });\n  it('should enable deactivation on controls action', fakeAsync(() => {\n    component.canDeactivateTDEdit = false;\n    component.onControlsAction(new SentinelControlItem('1', '1', 'accent', asyncData(false), asyncData(true)));\n    jasmine.clock().tick(1000);\n    expect(component.canDeactivate()).toBeTrue();\n  }));\n  it('should change satate of component when level is saved', () => {\n    component.unsavedLevels = createLevelsMock();\n    const reducedLevels = createLevelsMock().slice(1, 2);\n    component.onUnsavedLevelsChanged(reducedLevels);\n    expect(component.unsavedLevels).toEqual(reducedLevels);\n  });\n  it('should change state of component when number of levels change', () => {\n    component.onLevelsCountChanged(3);\n    expect(component.levelsCount).toEqual(3);\n  });\n  it('should change state of component when authors of TD change', () => {\n    component.onAuthorsChanged(true);\n    expect(component.canDeactivateAuthors).toEqual(false);\n  });\n\n  function initComponentData() {\n    editServiceSpy.trainingDefinition$ = asyncData(createMock());\n    editServiceSpy.editMode$ = asyncData(false);\n    editServiceSpy.saveDisabled$ = asyncData(false);\n    activatedRouteSpy.data = asyncData(asyncData([createMock()]));\n  }\n\n  function createMock() {\n    const td = new TrainingDefinition();\n    td.id = 2;\n    td.title = 'TD 2';\n    td.levels = createLevelsMock();\n    return td;\n  }\n\n  function createLevelsMock() {\n    const level1 = new GameLevel();\n    const level2 = new AssessmentLevel();\n    const level3 = new InfoLevel();\n    return [level1, level2, level3];\n  }\n});","map":{"version":3,"sources":["/home/dominik/Desktop/Workspace/FRONTEND/kypo-training-agenda/projects/kypo-training-agenda/definition-edit/src/components/training-definition-edit-overview.component.spec.ts"],"names":[],"mappings":"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","sourcesContent":["import { TrainingAgendaContext } from '@muni-kypo-crp/training-agenda/internal';\nimport { ActivatedRoute } from '@angular/router';\nimport { TrainingDefinitionEditOverviewComponent } from '@muni-kypo-crp/training-agenda/definition-edit';\nimport { ComponentFixture, TestBed, async, fakeAsync } from '@angular/core/testing';\nimport {\n  createActivatedRouteSpy,\n  createTrainingDefinitionEditServiceSpy,\n  createContext,\n} from '../../../internal/src/testing/testing-commons.spec';\nimport { TrainingDefinitionEditService } from '@muni-kypo-crp/training-agenda/definition-edit';\nimport { TrainingDefinition, Level, GameLevel, AssessmentLevel, InfoLevel } from '@muni-kypo-crp/training-model';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { TrainingDefinitionChangeEvent } from '../model/events/training-definition-change-event';\nimport { asyncData } from '@sentinel/common';\nimport { SentinelControlItem } from '@sentinel/components/controls';\nimport { MaterialTestingModule } from '../../../internal/src/testing/material-testing.module';\n\ndescribe('TrainingDefinitionEditOverviewComponent', () => {\n  let component: TrainingDefinitionEditOverviewComponent;\n  let fixture: ComponentFixture<TrainingDefinitionEditOverviewComponent>;\n\n  let activatedRouteSpy: jasmine.SpyObj<ActivatedRoute>;\n  let editServiceSpy: jasmine.SpyObj<TrainingDefinitionEditService>;\n  let context: TrainingAgendaContext;\n\n  beforeEach(async(() => {\n    activatedRouteSpy = createActivatedRouteSpy();\n    editServiceSpy = createTrainingDefinitionEditServiceSpy();\n    context = createContext();\n    initComponentData();\n    TestBed.configureTestingModule({\n      imports: [MaterialTestingModule, BrowserAnimationsModule],\n      declarations: [TrainingDefinitionEditOverviewComponent],\n      providers: [\n        { provide: ActivatedRoute, useValue: activatedRouteSpy },\n        { provide: TrainingDefinitionEditService, useValue: editServiceSpy },\n        { provide: TrainingAgendaContext, useValue: context },\n      ],\n    }).compileComponents();\n  }));\n\n  beforeEach(() => {\n    fixture = TestBed.createComponent(TrainingDefinitionEditOverviewComponent);\n    component = fixture.componentInstance;\n  });\n\n  it('should create', () => {\n    expect(component).toBeTruthy();\n  });\n\n  it('should set correct values', () => {\n    expect(component.defaultPaginationSize).toEqual(10);\n    component.trainingDefinition$.subscribe((val) => expect(val).toEqual(createMock()));\n    component.tdTitle$.subscribe((val) => expect(val).toEqual(createMock().title));\n    component.saveDisabled$.subscribe((val) => expect(val).toEqual(false));\n    component.editMode$.subscribe((val) => expect(val).toEqual(false));\n  });\n\n  it('should deactivate', () => {\n    expect(component.canDeactivate()).toBeTrue();\n  });\n\n  it('should change state of component', () => {\n    component.onTrainingDefinitionChanged(new TrainingDefinitionChangeEvent(createMock(), true));\n    expect(editServiceSpy.change).toHaveBeenCalledTimes(1);\n    expect(component.canDeactivateTDEdit).toBeFalse();\n  });\n\n  it('should enable deactivation on controls action', fakeAsync(() => {\n    component.canDeactivateTDEdit = false;\n    component.onControlsAction(new SentinelControlItem('1', '1', 'accent', asyncData(false), asyncData(true)));\n    jasmine.clock().tick(1000);\n    expect(component.canDeactivate()).toBeTrue();\n  }));\n\n  it('should change satate of component when level is saved', () => {\n    component.unsavedLevels = createLevelsMock();\n    const reducedLevels = createLevelsMock().slice(1, 2);\n    component.onUnsavedLevelsChanged(reducedLevels);\n    expect(component.unsavedLevels).toEqual(reducedLevels);\n  });\n\n  it('should change state of component when number of levels change', () => {\n    component.onLevelsCountChanged(3);\n    expect(component.levelsCount).toEqual(3);\n  });\n\n  it('should change state of component when authors of TD change', () => {\n    component.onAuthorsChanged(true);\n    expect(component.canDeactivateAuthors).toEqual(false);\n  });\n\n  function initComponentData() {\n    editServiceSpy.trainingDefinition$ = asyncData(createMock());\n    editServiceSpy.editMode$ = asyncData(false);\n    editServiceSpy.saveDisabled$ = asyncData(false);\n    activatedRouteSpy.data = asyncData(asyncData([createMock()]));\n  }\n\n  function createMock(): TrainingDefinition {\n    const td = new TrainingDefinition();\n    td.id = 2;\n    td.title = 'TD 2';\n    td.levels = createLevelsMock();\n    return td;\n  }\n\n  function createLevelsMock(): Level[] {\n    const level1 = new GameLevel();\n    const level2 = new AssessmentLevel();\n    const level3 = new InfoLevel();\n    return [level1, level2, level3];\n  }\n});\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}