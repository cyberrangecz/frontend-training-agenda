{"ast":null,"code":"import { ngfModule } from 'angular-file';\nimport { TrainingDefinitionUploadDialogComponent } from './training-definition-upload-dialog.component';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { TestBed, async } from '@angular/core/testing';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { asyncData, SentinelPipesModule } from '@sentinel/common';\nimport { createAdaptiveFileUploadProgressServiceSpy, createDialogRefSpy } from '../../../../internal/src/testing/testing-commons.spec';\nimport { AdaptiveFileUploadProgressService } from '../../services/file-upload/adaptive-file-upload-progress.service';\nimport { MaterialTestingModule } from '../../../../internal/src/testing/material-testing.module';\ndescribe('TrainingDefinitionUploadDialogComponent', () => {\n  let component;\n  let fixture;\n  let matDialogRefSpy;\n  let uploadProgressService;\n  beforeEach(async(() => {\n    matDialogRefSpy = createDialogRefSpy();\n    uploadProgressService = createAdaptiveFileUploadProgressServiceSpy();\n    uploadProgressService.isInProgress$ = asyncData(false);\n    TestBed.configureTestingModule({\n      imports: [MaterialTestingModule, SentinelPipesModule, BrowserAnimationsModule, ngfModule],\n      declarations: [TrainingDefinitionUploadDialogComponent],\n      providers: [{\n        provide: MatDialogRef,\n        useValue: matDialogRefSpy\n      }, {\n        provide: AdaptiveFileUploadProgressService,\n        useValue: uploadProgressService\n      }]\n    }).compileComponents();\n  }));\n  beforeEach(() => {\n    fixture = TestBed.createComponent(TrainingDefinitionUploadDialogComponent);\n    component = fixture.componentInstance;\n    fixture.detectChanges();\n  });\n  it('should create', () => {\n    expect(component).toBeTruthy();\n  });\n  it('should close dialog with no result', () => {\n    component.cancel();\n    expect(matDialogRefSpy.close).toHaveBeenCalledTimes(1);\n  });\n  it('should emit upload event', () => {\n    spyOn(component.onUpload$, 'emit');\n    component.upload();\n    expect(component.onUpload$.emit).toHaveBeenCalledTimes(1);\n  });\n  it('should clear file', () => {\n    component.selectedFile = new File([], '');\n    component.clearFile();\n    expect(component.selectedFile).toBeFalsy();\n  });\n});","map":{"version":3,"sources":["/home/dominik/Desktop/Workspace/FRONTEND/kypo-training-agenda/projects/kypo-training-agenda/adaptive-definition-overview/src/components/upload-dialog/training-defintion-upload-dialog.component.spec.ts"],"names":[],"mappings":"AAAA,SAAS,SAAT,QAA0B,cAA1B;AACA,SAAS,uCAAT,QAAwD,+CAAxD;AACA,SAAS,YAAT,QAA6B,0BAA7B;AACA,SAA2B,OAA3B,EAAoC,KAApC,QAAiD,uBAAjD;AACA,SAAS,uBAAT,QAAwC,sCAAxC;AACA,SAAS,SAAT,EAAoB,mBAApB,QAA+C,kBAA/C;AACA,SACE,0CADF,EAEE,kBAFF,QAGO,uDAHP;AAIA,SAAS,iCAAT,QAAkD,kEAAlD;AACA,SAAS,qBAAT,QAAsC,0DAAtC;AAEA,QAAQ,CAAC,yCAAD,EAA4C,MAAK;AACvD,MAAI,SAAJ;AACA,MAAI,OAAJ;AAEA,MAAI,eAAJ;AACA,MAAI,qBAAJ;AAEA,EAAA,UAAU,CAAC,KAAK,CAAC,MAAK;AACpB,IAAA,eAAe,GAAG,kBAAkB,EAApC;AACA,IAAA,qBAAqB,GAAG,0CAA0C,EAAlE;AACA,IAAA,qBAAqB,CAAC,aAAtB,GAAsC,SAAS,CAAC,KAAD,CAA/C;AACA,IAAA,OAAO,CAAC,sBAAR,CAA+B;AAC7B,MAAA,OAAO,EAAE,CAAC,qBAAD,EAAwB,mBAAxB,EAA6C,uBAA7C,EAAsE,SAAtE,CADoB;AAE7B,MAAA,YAAY,EAAE,CAAC,uCAAD,CAFe;AAG7B,MAAA,SAAS,EAAE,CACT;AAAE,QAAA,OAAO,EAAE,YAAX;AAAyB,QAAA,QAAQ,EAAE;AAAnC,OADS,EAET;AAAE,QAAA,OAAO,EAAE,iCAAX;AAA8C,QAAA,QAAQ,EAAE;AAAxD,OAFS;AAHkB,KAA/B,EAOG,iBAPH;AAQD,GAZe,CAAN,CAAV;AAcA,EAAA,UAAU,CAAC,MAAK;AACd,IAAA,OAAO,GAAG,OAAO,CAAC,eAAR,CAAwB,uCAAxB,CAAV;AACA,IAAA,SAAS,GAAG,OAAO,CAAC,iBAApB;AACA,IAAA,OAAO,CAAC,aAAR;AACD,GAJS,CAAV;AAMA,EAAA,EAAE,CAAC,eAAD,EAAkB,MAAK;AACvB,IAAA,MAAM,CAAC,SAAD,CAAN,CAAkB,UAAlB;AACD,GAFC,CAAF;AAIA,EAAA,EAAE,CAAC,oCAAD,EAAuC,MAAK;AAC5C,IAAA,SAAS,CAAC,MAAV;AACA,IAAA,MAAM,CAAC,eAAe,CAAC,KAAjB,CAAN,CAA8B,qBAA9B,CAAoD,CAApD;AACD,GAHC,CAAF;AAKA,EAAA,EAAE,CAAC,0BAAD,EAA6B,MAAK;AAClC,IAAA,KAAK,CAAC,SAAS,CAAC,SAAX,EAAsB,MAAtB,CAAL;AACA,IAAA,SAAS,CAAC,MAAV;AACA,IAAA,MAAM,CAAC,SAAS,CAAC,SAAV,CAAoB,IAArB,CAAN,CAAiC,qBAAjC,CAAuD,CAAvD;AACD,GAJC,CAAF;AAMA,EAAA,EAAE,CAAC,mBAAD,EAAsB,MAAK;AAC3B,IAAA,SAAS,CAAC,YAAV,GAAyB,IAAI,IAAJ,CAAS,EAAT,EAAa,EAAb,CAAzB;AACA,IAAA,SAAS,CAAC,SAAV;AACA,IAAA,MAAM,CAAC,SAAS,CAAC,YAAX,CAAN,CAA+B,SAA/B;AACD,GAJC,CAAF;AAKD,CA/CO,CAAR","sourcesContent":["import { ngfModule } from 'angular-file';\nimport { TrainingDefinitionUploadDialogComponent } from './training-definition-upload-dialog.component';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { ComponentFixture, TestBed, async } from '@angular/core/testing';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { asyncData, SentinelPipesModule } from '@sentinel/common';\nimport {\n  createAdaptiveFileUploadProgressServiceSpy,\n  createDialogRefSpy,\n} from '../../../../internal/src/testing/testing-commons.spec';\nimport { AdaptiveFileUploadProgressService } from '../../services/file-upload/adaptive-file-upload-progress.service';\nimport { MaterialTestingModule } from '../../../../internal/src/testing/material-testing.module';\n\ndescribe('TrainingDefinitionUploadDialogComponent', () => {\n  let component: TrainingDefinitionUploadDialogComponent;\n  let fixture: ComponentFixture<TrainingDefinitionUploadDialogComponent>;\n\n  let matDialogRefSpy: jasmine.SpyObj<MatDialogRef<TrainingDefinitionUploadDialogComponent>>;\n  let uploadProgressService: jasmine.SpyObj<AdaptiveFileUploadProgressService>;\n\n  beforeEach(async(() => {\n    matDialogRefSpy = createDialogRefSpy();\n    uploadProgressService = createAdaptiveFileUploadProgressServiceSpy();\n    uploadProgressService.isInProgress$ = asyncData(false);\n    TestBed.configureTestingModule({\n      imports: [MaterialTestingModule, SentinelPipesModule, BrowserAnimationsModule, ngfModule],\n      declarations: [TrainingDefinitionUploadDialogComponent],\n      providers: [\n        { provide: MatDialogRef, useValue: matDialogRefSpy },\n        { provide: AdaptiveFileUploadProgressService, useValue: uploadProgressService },\n      ],\n    }).compileComponents();\n  }));\n\n  beforeEach(() => {\n    fixture = TestBed.createComponent(TrainingDefinitionUploadDialogComponent);\n    component = fixture.componentInstance;\n    fixture.detectChanges();\n  });\n\n  it('should create', () => {\n    expect(component).toBeTruthy();\n  });\n\n  it('should close dialog with no result', () => {\n    component.cancel();\n    expect(matDialogRefSpy.close).toHaveBeenCalledTimes(1);\n  });\n\n  it('should emit upload event', () => {\n    spyOn(component.onUpload$, 'emit');\n    component.upload();\n    expect(component.onUpload$.emit).toHaveBeenCalledTimes(1);\n  });\n\n  it('should clear file', () => {\n    component.selectedFile = new File([], '');\n    component.clearFile();\n    expect(component.selectedFile).toBeFalsy();\n  });\n});\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}