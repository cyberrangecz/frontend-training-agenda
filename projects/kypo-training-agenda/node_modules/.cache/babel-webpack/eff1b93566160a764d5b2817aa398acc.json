{"ast":null,"code":"import { TrainingAgendaContext } from '@muni-kypo-crp/training-agenda/internal';\nimport { ActivatedRoute } from '@angular/router';\nimport { AdaptiveDefinitionOverviewComponent } from './adaptive-definition-overview.component';\nimport { TestBed, async, fakeAsync } from '@angular/core/testing';\nimport { createActivatedRouteSpy, createContext, createTrainingDefinitionServiceSpy } from '../../../internal/src/testing/testing-commons.spec';\nimport { GameLevel, AssessmentLevel, InfoLevel, TrainingDefinition } from '@muni-kypo-crp/training-model';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { asyncData, PaginatedResource, SentinelPagination, RequestedPagination } from '@sentinel/common';\nimport { LoadTableEvent, SentinelTableModule } from '@sentinel/components/table';\nimport { SentinelControlsModule } from '@sentinel/components/controls';\nimport { MaterialTestingModule } from '../../../internal/src/testing/material-testing.module';\nimport { AdaptiveDefinitionService } from '../services/state/adaptive-definition.service';\ndescribe('TrainingDefinitionOverviewComponent', () => {\n  let component;\n  let fixture;\n  let activatedRouteSpy;\n  let context;\n  let adaptiveDefinitionServiceSpy;\n  beforeEach(async(() => {\n    activatedRouteSpy = createActivatedRouteSpy();\n    context = createContext();\n    adaptiveDefinitionServiceSpy = createTrainingDefinitionServiceSpy();\n    initValues();\n    TestBed.configureTestingModule({\n      imports: [MaterialTestingModule, SentinelTableModule, BrowserAnimationsModule, SentinelControlsModule],\n      declarations: [AdaptiveDefinitionOverviewComponent],\n      providers: [{\n        provide: ActivatedRoute,\n        useValue: activatedRouteSpy\n      }, {\n        provide: TrainingAgendaContext,\n        useValue: context\n      }, {\n        provide: AdaptiveDefinitionService,\n        useValue: adaptiveDefinitionServiceSpy\n      }]\n    }).compileComponents();\n  }));\n  beforeEach(() => {\n    fixture = TestBed.createComponent(AdaptiveDefinitionOverviewComponent);\n    component = fixture.componentInstance;\n  });\n  it('should create', () => {\n    expect(component).toBeTruthy();\n  });\n  it('should init values', fakeAsync(() => {\n    adaptiveDefinitionServiceSpy.getAll.and.returnValue(asyncData(createPaginatedMock()));\n    fixture.detectChanges();\n    expect(component.controls.length).toEqual(2);\n    component.hasError$.subscribe(val => expect(val).toBeFalse());\n    component.isLoading$.subscribe(val => expect(val).toBeFalse());\n    component.trainingDefinitions$.subscribe(val => expect(val).toBeTruthy());\n  }));\n  it('should get data for table', () => {\n    adaptiveDefinitionServiceSpy.getAll.and.returnValue(asyncData(createPaginatedMock()));\n    component.onLoadEvent(new LoadTableEvent(new RequestedPagination(1, 1, '', ''), ''));\n    expect(adaptiveDefinitionServiceSpy.getAll).toHaveBeenCalledTimes(1);\n    expect(adaptiveDefinitionServiceSpy.getAll).toHaveBeenCalledWith(new RequestedPagination(1, 1, '', ''), '');\n  });\n\n  function createMock() {\n    const td = new TrainingDefinition();\n    td.id = 2;\n    td.title = 'TD 2';\n    td.levels = createLevelsMock();\n    td.description = '';\n    td.prerequisites = [];\n    return td;\n  }\n\n  function createPaginatedMock() {\n    return new PaginatedResource([createMock()], new SentinelPagination(1, 1, 1, 1, 1));\n  }\n\n  function createLevelsMock() {\n    const level1 = new GameLevel();\n    const level2 = new AssessmentLevel();\n    const level3 = new InfoLevel();\n    return [level1, level2, level3];\n  }\n\n  function initValues() {\n    adaptiveDefinitionServiceSpy.hasError$ = asyncData(false);\n    adaptiveDefinitionServiceSpy.isLoading$ = asyncData(false);\n    adaptiveDefinitionServiceSpy.resource$ = asyncData(createPaginatedMock());\n  }\n});","map":{"version":3,"sources":["/home/dominik/Desktop/Workspace/FRONTEND/kypo-training-agenda/projects/kypo-training-agenda/adaptive-definition-overview/src/components/adaptive-definition-overview.component.spec.ts"],"names":[],"mappings":"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","sourcesContent":["import { TrainingAgendaContext } from '@muni-kypo-crp/training-agenda/internal';\nimport { ActivatedRoute } from '@angular/router';\nimport { AdaptiveDefinitionOverviewComponent } from './adaptive-definition-overview.component';\nimport { TestBed, async, ComponentFixture, fakeAsync } from '@angular/core/testing';\nimport { TrainingDefinitionService } from '@muni-kypo-crp/training-agenda/definition-overview';\nimport {\n  createActivatedRouteSpy,\n  createContext,\n  createTrainingDefinitionServiceSpy,\n} from '../../../internal/src/testing/testing-commons.spec';\nimport { Level, GameLevel, AssessmentLevel, InfoLevel, TrainingDefinition } from '@muni-kypo-crp/training-model';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { asyncData, PaginatedResource, SentinelPagination, RequestedPagination } from '@sentinel/common';\nimport { LoadTableEvent, SentinelTableModule } from '@sentinel/components/table';\nimport { SentinelControlsModule } from '@sentinel/components/controls';\nimport { MaterialTestingModule } from '../../../internal/src/testing/material-testing.module';\nimport { AdaptiveDefinitionService } from '../services/state/adaptive-definition.service';\n\ndescribe('TrainingDefinitionOverviewComponent', () => {\n  let component: AdaptiveDefinitionOverviewComponent;\n  let fixture: ComponentFixture<AdaptiveDefinitionOverviewComponent>;\n\n  let activatedRouteSpy: jasmine.SpyObj<ActivatedRoute>;\n  let context: TrainingAgendaContext;\n  let adaptiveDefinitionServiceSpy: jasmine.SpyObj<TrainingDefinitionService>;\n\n  beforeEach(async(() => {\n    activatedRouteSpy = createActivatedRouteSpy();\n    context = createContext();\n    adaptiveDefinitionServiceSpy = createTrainingDefinitionServiceSpy();\n    initValues();\n    TestBed.configureTestingModule({\n      imports: [MaterialTestingModule, SentinelTableModule, BrowserAnimationsModule, SentinelControlsModule],\n      declarations: [AdaptiveDefinitionOverviewComponent],\n      providers: [\n        { provide: ActivatedRoute, useValue: activatedRouteSpy },\n        { provide: TrainingAgendaContext, useValue: context },\n        { provide: AdaptiveDefinitionService, useValue: adaptiveDefinitionServiceSpy },\n      ],\n    }).compileComponents();\n  }));\n\n  beforeEach(() => {\n    fixture = TestBed.createComponent(AdaptiveDefinitionOverviewComponent);\n    component = fixture.componentInstance;\n  });\n\n  it('should create', () => {\n    expect(component).toBeTruthy();\n  });\n\n  it('should init values', fakeAsync(() => {\n    adaptiveDefinitionServiceSpy.getAll.and.returnValue(asyncData(createPaginatedMock()));\n    fixture.detectChanges();\n    expect(component.controls.length).toEqual(2);\n    component.hasError$.subscribe((val) => expect(val).toBeFalse());\n    component.isLoading$.subscribe((val) => expect(val).toBeFalse());\n    component.trainingDefinitions$.subscribe((val) => expect(val).toBeTruthy());\n  }));\n\n  it('should get data for table', () => {\n    adaptiveDefinitionServiceSpy.getAll.and.returnValue(asyncData(createPaginatedMock()));\n    component.onLoadEvent(new LoadTableEvent(new RequestedPagination(1, 1, '', ''), ''));\n    expect(adaptiveDefinitionServiceSpy.getAll).toHaveBeenCalledTimes(1);\n    expect(adaptiveDefinitionServiceSpy.getAll).toHaveBeenCalledWith(new RequestedPagination(1, 1, '', ''), '');\n  });\n\n  function createMock(): TrainingDefinition {\n    const td = new TrainingDefinition();\n    td.id = 2;\n    td.title = 'TD 2';\n    td.levels = createLevelsMock();\n    td.description = '';\n    td.prerequisites = [];\n    return td;\n  }\n\n  function createPaginatedMock(): PaginatedResource<TrainingDefinition> {\n    return new PaginatedResource([createMock()], new SentinelPagination(1, 1, 1, 1, 1));\n  }\n\n  function createLevelsMock(): Level[] {\n    const level1 = new GameLevel();\n    const level2 = new AssessmentLevel();\n    const level3 = new InfoLevel();\n    return [level1, level2, level3];\n  }\n\n  function initValues() {\n    adaptiveDefinitionServiceSpy.hasError$ = asyncData(false);\n    adaptiveDefinitionServiceSpy.isLoading$ = asyncData(false);\n    adaptiveDefinitionServiceSpy.resource$ = asyncData(createPaginatedMock());\n  }\n});\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}